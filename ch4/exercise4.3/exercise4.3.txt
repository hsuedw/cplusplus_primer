In C++, there are four operators that do guarantee the order in which operands are evaluated. They are the logical AND (&&) operator, the logical OR (||) operator, the conditional (? :) operator and teh comma (,) operator. For other binary operators, the operand evalation order is not undefined.
In an expression, if the operands do not affect the same objects or perform IO, then the order in which the operands are evaluated is irrelevant. If any of these operands do affect the same objects, the the expression  is in error and has undefined behavior.For the sake of optimization and performance, this design is acceptable. However, the programmer must be careful about this issue. In an expression, if it has side effects for one object in several operands, we may consider to break the whole expression to several smaller expressions and organize them in a correct order.
